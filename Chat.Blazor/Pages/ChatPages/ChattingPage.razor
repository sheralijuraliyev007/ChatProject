@inherits ChattingPageBase

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat UI</title>
    <link rel="stylesheet" href="styles.css">
    <style>
        * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
}

.chat-container {
    display: flex;
    width: 1000px;
    height: 600px;
    background-color: #fff;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.sidebar {
    width: 300px;
    background-color: #2f3640;
    color: #f5f6fa;
    display: flex;
    flex-direction: column;
}

.sidebar-header {
    padding: 20px;
    background-color: #353b48;
    text-align: center;
}

.contact-list {
    flex-grow: 1;
    overflow-y: auto;
    padding: 10px;
}

.contact {
    display: flex;
    align-items: center;
    padding: 10px;
    margin-bottom: 10px;
    cursor: pointer;
    transition: background-color 0.2s;
}

.contact:hover {
    background-color: #3b4252;
}

.contact-avatar {
    width: 40px;
    height: 40px;
    background-color: #4b6584;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 18px;
    margin-right: 10px;
}

.contact-info h4 {
    margin-bottom: 5px;
    font-size: 16px;
}

.contact-info p {
    font-size: 12px;
    color: #dcdde1;
}

.chat-window {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
}

.chat-header {
    background-color: #f5f6fa;
    padding: 20px;
    border-bottom: 1px solid #e1e1e1;
    text-align: center;
    font-size: 18px;
}

.chat-body {
    flex-grow: 1;
    padding: 20px;
    background-color: #fafafa;
    overflow-y: auto;
}

.message {
    display: flex;
    margin-bottom: 15px;
}

.message.left {
    justify-content: flex-start;
}

.message.right {
    justify-content: flex-end;
}

.message-content {
    max-width: 60%;
    padding: 10px 15px;
    border-radius: 20px;
    background-color: #e1e1e1;
    font-size: 14px;
}

.message.right .message-content {
    background-color: #4cd137;
    color: #fff;
}

.chat-footer {
    padding: 20px;
    background-color: #f5f6fa;
    display: flex;
    align-items: center;
}

.message-input {
    flex-grow: 1;
    padding: 10px;
    border: 1px solid #e1e1e1;
    border-radius: 30px;
    margin-right: 10px;
    outline: none;
    font-size: 14px;
}

.send-button {
    padding: 10px 20px;
    background-color: #44bd32;
    color: white;
    border: none;
    border-radius: 20px;
    cursor: pointer;
}

.send-button:hover {
    background-color: #3d9970;
}

    </style>
</head>
<body>
    <div class="chat-container">
    <div class="sidebar">
        <div class="sidebar-header">
            <h2>Chats</h2>
        </div>
        
        @{
            if (Chats is not null)
            {
                <div class="contact-list">
                    
                    @if (Chats.Count > 0)
                    {
                        @foreach (var chat in Chats)
                        {
    
                            <div class="contact" @onclick="async () => {await SelectChat(chat.Id); }">
                                <div class="contact-avatar">@chat?.ChatName</div>
                                <div class="contact-info">
                                    <h4>@chat?.ChatName</h4>
                                    <p>@chat?.Messages?.Last().Text</p>
                                </div>
                            </div>
    
                        }
                    }

                    <br/>
                    <p>Others</p>
                    @if (Users is not null)
                    {
                        foreach (var user in Users)
                        {
                            <div class="contact" @onclick="async () => { await CreateChat(user.Id); }">
                                <div class="contact-avatar">@user.FirstName</div>
                                <div class="contact-info">
                                    <h4>@user.FirstName @user.LastName</h4>
                                    @*<p>@chat.Messages?.Last().Text</p>*@
                                </div>
                            </div>
                        }
                    }


                </div>
            }
        }


    </div>
    

    <div class="chat-window">
        
        
    @{

        if (ChatDto is not null)
        {
            <div class="chat-header">
                <h3>@ChatDto?.ChatName</h3>
            </div>
            <div class="chat-body">
                @if (Messages is not null|| Messages?.Count > 0)
                {
                    
                    foreach (var message in Messages)
                    {

                        if (Username == message.FromUserName)
                        {
                            <div class="message right">
                                <div class="message-content">@message.Text</div>
                            </div>
                        }
                        else
                        {
                            <div class="message left">
                                <div class="message-content">@message.Text</div>
                            </div>
                        }

                    }
                }
                else
                {
                    <p>There's no messages!</p>
                }
                

            </div>



        }

        else
        {
            <div class="chat-header">
                <h3>John Doe</h3>
            </div>
            <div class="chat-body">
                <p>Select chat</p>
            </div>

        }

        if (IsSelected)
        {
            <div class="chat-footer">
                <input type="text" @bind="Text" @onkeyup="Pressed" placeholder="Type a message..." class="message-input">
                <button class="send-button" @onclick="SendMessage">Send</button>
            </div>

            
        }
        
        
        

    }
    </div>
    </div>
</body>
</html>
